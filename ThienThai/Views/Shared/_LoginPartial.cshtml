@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
@if (User.Identity.Name.Equals("votantai4899@gmail.com"))
{
<li class="nav-item">
    <a class="nav-link btn btn-sm btn-outline-orange btn-rounded px-3" asp-area="" asp-controller="Management" asp-action="Index" title="Manage">Manage</a>
</li>
}
                <li class="nav-item">
                    <a class="nav-link btn btn-sm btn-outline-indigo btn-rounded px-3" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profile</a>
                </li>
                                <li class="nav-item">
                                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                        <button type="submit" class="nav-link btn btn-sm btn-outline-danger btn-rounded px-3" title="Manage">Logout</button>
                                    </form>
                                </li> }
                                            else
                                            {
                                <li class="nav-item">
                                    <a class="btn btn-sm btn-outline-blue btn-rounded nav-link px-4" asp-area="Identity" asp-page="/Account/Login">Login</a>
                                </li>}
</ul>
